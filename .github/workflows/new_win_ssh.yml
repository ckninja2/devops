# This is a basic workflow to help you get started with Actions

name: Windowss-ssh

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Extract ssh
        run: tar -xf OpenSSH-Win64.zip

      - name: Extract cloudflared
        run: 7z e cloudflared.7z

      - name: cloudflared
        run: |
          $pinfo = New-Object System.Diagnostics.ProcessStartInfo
          $pinfo.FileName = "cloudflared.exe"
          $pinfo.RedirectStandardError = $true
          $pinfo.RedirectStandardOutput = $true
          $pinfo.UseShellExecute = $false
          $pinfo.Arguments = "tunnel --no-autoupdate --url tcp://localhost:22"
          $p = New-Object System.Diagnostics.Process
          $p.StartInfo = $pinfo
          $p.Start() | Out-Null
          while ($true) {
              $line = $p.StandardError.ReadLine()
              if ($line.Contains(".trycloudflare.com")){
                  break
              }
          }

          $link = $line.Split(" ", [System.StringSplitOptions]::RemoveEmptyEntries)[3]
          echo $link
          $uri = "https://api.telegram.org/bot${{secrets.BOT_TOKEN}}/sendMessage"
          $Parameters = @{
              chat_id = ${{secrets.CHAT_ID}}
              text = $link
          }
          Invoke-WebRequest -Uri $uri -Body $Parameters -Method Get

      - name: run ssh server
        run: |
          mkdir OpenSSH-Win64\ssh
          mkdir ~\.ssh
          
          $conf=@"
          HostKey	ssh/ssh_host_rsa_key
          Subsystem	sftp	sftp-server.exe
          LogLevel	DEBUG3
          PidFile	ssh/sshd.pid
          "@
          $conf | Out-File OpenSSH-Win64\ssh\sshd_config
          
          "${{secrets.PUB_KEY}}" | Out-File ~\.ssh\authorized_keys
          "${{secrets.PRVT_KEY}}" | Out-File ~\.ssh\id_rsa
          "${{secrets.HOST_PRVT_KEY}}" | Out-File OpenSSH-Win64\ssh\ssh_host_rsa_key
          
          $Key = "$PWD\OpenSSH-Win64\ssh\ssh_host_rsa_key"
          Icacls $Key /c /t /Inheritance:d
          Icacls $Key /c /t /Grant ${env:UserName}:F
          TakeOwn /F $Key
          Icacls $Key /c /t /Grant:r ${env:UserName}:F
          Icacls $Key /c /t /Remove:g SYSTEM Users Administrators
          Icacls $Key
          
          New-NetFirewallRule -DisplayName “Allow SSH” -Direction Inbound -LocalPort 22 -Protocol TCP -Action Allow
          &"$PWD\OpenSSH-Win64\sshd.exe" -f $PWD\OpenSSH-Win64\ssh\sshd_config -D
